version: 2.1
orbs:
  coveralls: coveralls/coveralls@1.0.6
tagged_build_filters: &tagged_build_filters
  branches:
    ignore: /.*/
  tags:
    only: /v[0-9]+\.[0-9]+\.[0-9]+/
test_build_filters: &test_build_filters
  branches:
    only: /.*/
  tags:
    ignore: /v[0-9]+\.[0-9]+\.[0-9]+/
jobs:
  test:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: npm install
      - run: npm run lint
      - run: npm run test
      - coveralls/upload:
          token: COVERALLS_REPO_TOKEN
  build:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: Check Tagged Push
          command: |
            PKG_VERSION=$(grep version package.json | cut -d'"' -f4)
            if [[ "${CIRCLE_TAG}" != "v${PKG_VERSION}" ]]; then
              echo "There is mismatch:"
              echo "  TAG_VERSION: ${CIRCLE_TAG}"
              echo "  PKG_VERSION: v${PKG_VERSION}"
              exit 1
            fi
      - run: npm install --production
      - run: zip logdna.zip -r node_modules/ index.js package.json lib/*.js
      - persist_to_workspace:
          root: .
          paths:
            - ./logdna.zip
  release:
    docker:
      - image: circleci/golang:1.12
    steps:
      - attach_workspace:
          at: .
      - run: go get -u github.com/tcnksm/ghr
      - run:
          name: Create a Release
          command: |
            ghr \
              -n "LogDNA Node.js Logger ${CIRCLE_TAG}" \
              -t ${GITHUB_TOKEN} \
              -u ${CIRCLE_PROJECT_USERNAME} \
              -r ${CIRCLE_PROJECT_REPONAME} \
              -draft ${CIRCLE_TAG} ./logdna.zip
  approve:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - persist_to_workspace:
          root: .
          paths:
            - ./logdna.zip
  publish:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc
      - run: npm publish
workflows:
  update:
    jobs:
      - test:
          filters: *tagged_build_filters
      - build:
          requires:
            - test
          filters: *tagged_build_filters
      - release:
          requires:
            - build
          filters: *tagged_build_filters
      - approve:
          type: approval
          requires:
            - release
          filters: *tagged_build_filters
      - publish:
          requires:
            - approve
          filters: *tagged_build_filters
  test:
    jobs:
      - test:
          filters: *test_build_filters
